{"ast":null,"code":"var _jsxFileName = \"/home/mudit/Desktop/React/tambola/tambolaClient/src/components/Ticket/Ticket.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nfunction RenderRow({\n  row\n}) {\n  var rowvals = {\n    row\n  }.toString().split(\"\").map(x => +x);\n}\n\nconst Ticket = ({\n  row1,\n  row2,\n  row3\n}) => {\n  console.log(row1);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RenderRow, {\n    row: row1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Ticket;","map":{"version":3,"sources":["/home/mudit/Desktop/React/tambola/tambolaClient/src/components/Ticket/Ticket.js"],"names":["React","Grid","Paper","RenderRow","row","rowvals","toString","split","map","x","Ticket","row1","row2","row3","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AACA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA4B;AACpB,MAAIC,OAAO,GAAC;AAACD,IAAAA;AAAD,IAAME,QAAN,GAAiBC,KAAjB,CAAuB,EAAvB,EAA2BC,GAA3B,CAAgCC,CAAD,IAAK,CAACA,CAArC,CAAZ;AACP;;AACD,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAOC,EAAAA,IAAP;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,CADJ,CADJ;AAKH,CAPD;;AAQA,eAAeD,MAAf","sourcesContent":["import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nfunction RenderRow({ row }) {\n        var rowvals={row}.toString().split(\"\").map((x)=>+x);\n}\nconst Ticket = ({ row1,row2,row3 }) => {\n    console.log(row1);\n    return (\n        <div>\n            <h1><RenderRow row={row1}/></h1>\n        </div>\n    )\n}\nexport default Ticket;"]},"metadata":{},"sourceType":"module"}