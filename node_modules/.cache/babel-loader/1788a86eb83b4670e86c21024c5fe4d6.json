{"ast":null,"code":"export default function generate() {\n  var ticket = new Array(3);\n\n  for (var i = 0; i < 3; i++) {\n    ticket[i] = new Array(9);\n  } //for each row we generate 5 random indexes\n\n\n  var indexMatrix = new Array(3);\n\n  for (var i = 0; i < 3; i++) {\n    indexMatrix[i] = new Array();\n  }\n\n  for (var j = 0; j < 3; j++) {\n    for (var i = 0; i < 5; i++) {\n      var index = Math.floor(Math.random() * 9);\n      if (indexMatrix[j].includes(index)) i--;else {\n        indexMatrix[j].push(index);\n      }\n    }\n  }\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 5; j++) {\n      console.log(indexMatrix[i][j]);\n    }\n  }\n\n  var numbers = new Array();\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 5; j++) {\n      var offset = Math.floor(Math.random() * 10);\n      console.log('offset=' + offset);\n      var indexOffset = indexMatrix[i][j];\n      console.log('Indiexoffset=' + indexOffset);\n      var number = indexOffset * 10 + offset;\n      console.log('number=' + number);\n\n      if (numbers.includes(number) || number > 99 || number < 1) {\n        j--;\n        continue;\n      }\n\n      ticket[i][indexOffset] = number;\n      numbers.push(number);\n    }\n  }\n\n  for (var i = 0; i < 3; i++) {\n    console.log(ticket[i].toString());\n  }\n\n  for (var col = 0; col < 9; col++) {\n    if (ticket[0][col] != null && ticket[1][col] != null && ticket[2][col] != null) {\n      for (var row = 0; row < 2; row++) {\n        if (ticket[row][col] > ticket[row + 1][col]) {\n          var temp = ticket[row][col];\n          ticket[row][col] = ticket[row + 1][col];\n          ticket[row + 1][col] = temp;\n        }\n      }\n    } // if 1st && 2nd row are filled by r && om number\n    else if (ticket[0][col] != null && ticket[1][col] != null && ticket[2][col] == null) {\n        if (ticket[0][col] > ticket[1][col]) {\n          var temp = ticket[0][col];\n          ticket[0][col] = ticket[1][col];\n          ticket[1][col] = temp;\n        }\n      } // if 1st && 3rd row are filled by r && om number\n      else if (ticket[0][col] != null && ticket[2][col] != null && ticket[1][col] == null) {\n          if (ticket[0][col] > ticket[2][col]) {\n            var temp = ticket[0][col];\n            ticket[0][col] = ticket[2][col];\n            ticket[2][col] = temp;\n          }\n        } // if 2nd && 3rd rows are filled with r && om numbers\n        else if (ticket[0][col] == null && ticket[1][col] != null && ticket[2][col] != null) {\n            if (ticket[1][col] > ticket[2][col]) {\n              var temp = ticket[1][col];\n              ticket[1][col] = ticket[2][col];\n              ticket[2][col] = temp;\n            }\n          }\n  }\n\n  for (var i = 0; i < 3; i++) {\n    console.log(ticket[i].toString());\n  }\n\n  return ticket;\n}","map":{"version":3,"sources":["/home/mudit/Desktop/React/tambola/src/logic/ticket-generator.js"],"names":["generate","ticket","Array","i","indexMatrix","j","index","Math","floor","random","includes","push","console","log","numbers","offset","indexOffset","number","toString","col","row","temp"],"mappings":"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","sourcesContent":["export default function generate() {\n    var ticket = new Array(3);\n    for (var i = 0; i < 3; i++) {\n        ticket[i] = new Array(9);\n    }\n    //for each row we generate 5 random indexes\n    var indexMatrix = new Array(3);\n    for (var i = 0; i < 3; i++) {\n        indexMatrix[i] = new Array();\n    }\n    for (var j = 0; j < 3; j++) {\n        for (var i = 0; i < 5; i++) {\n            var index = Math.floor(Math.random() * 9);\n            if (indexMatrix[j].includes(index))\n                i--;\n            else {\n                indexMatrix[j].push(index);\n            }\n        }\n    }\n    for (var i = 0; i < 3; i++) {\n        for (var j = 0; j < 5; j++) {\n            console.log(indexMatrix[i][j]);\n        }\n    }\n    var numbers = new Array();\n    for (var i = 0; i < 3; i++) {\n        for (var j = 0; j < 5; j++) {\n            var offset = Math.floor(Math.random() * 10);\n            console.log('offset=' + offset);\n            var indexOffset = indexMatrix[i][j];\n            console.log('Indiexoffset=' + indexOffset);\n            var number = indexOffset * 10 + offset;\n            console.log('number=' + number);\n            if (numbers.includes(number) || number > 99 || number < 1) {\n                j--;\n                continue;\n            }\n            ticket[i][indexOffset] = number;\n            numbers.push(number);\n        }\n    }\n    for (var i = 0; i < 3; i++) {\n        console.log(ticket[i].toString());\n    }\n    for (var col = 0; col < 9; col++) {\n        if (ticket[0][col] != null && ticket[1][col] != null && ticket[2][col] != null) {\n            for (var row = 0; row < 2; row++) {\n                if (ticket[row][col] > ticket[row + 1][col]) {\n                    var temp = ticket[row][col];\n                    ticket[row][col] = ticket[row + 1][col];\n                    ticket[row + 1][col] = temp;\n                }\n\n            }\n        }\n\n\n        // if 1st && 2nd row are filled by r && om number\n\n        else if (ticket[0][col] != null && ticket[1][col] != null && ticket[2][col] == null) {\n            if (ticket[0][col] > ticket[1][col]) {\n                var temp = ticket[0][col];\n                ticket[0][col] = ticket[1][col];\n                ticket[1][col] = temp;\n            }\n        }\n\n\n        // if 1st && 3rd row are filled by r && om number\n\n        else if (ticket[0][col] != null && ticket[2][col] != null && ticket[1][col] == null) {\n            if (ticket[0][col] > ticket[2][col]) {\n                var temp = ticket[0][col];\n                ticket[0][col] = ticket[2][col];\n                ticket[2][col] = temp;\n            }\n        }\n\n        // if 2nd && 3rd rows are filled with r && om numbers\n\n        else if (ticket[0][col] == null && ticket[1][col] != null && ticket[2][col] != null) {\n            if (ticket[1][col] > ticket[2][col]) {\n                var temp = ticket[1][col];\n                ticket[1][col] = ticket[2][col];\n                ticket[2][col] = temp;\n            }\n        }\n\n    }\n    for (var i = 0; i < 3; i++) {\n        console.log(ticket[i].toString());\n    }\n    return ticket;\n}\n"]},"metadata":{},"sourceType":"module"}