{"ast":null,"code":"var _jsxFileName = \"/home/mudit/Desktop/React/tambola/tambolaClient/src/components/Home/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport queryString from 'querystring';\nimport Ticket from '../Ticket/Ticket';\nlet socket;\n\nconst Home = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [ticket, setTicket] = useState([]);\n  const [started, setStarted] = useState(false);\n  const [gameBoard, setGameBoard] = useState([]);\n  const [count, setCount] = useState(0);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search.substring(1)); //console.log(queryString.parse(location.search.substring(1)));\n\n    console.log(name, room);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {\n      console.log('Emitted join signal');\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('ticket', ticket => {\n      setTicket(ticket); //alert(ticket.toString());\n    });\n  }, [ticket]);\n  useEffect(() => {\n    socket.on('startedGame', gameArray => {\n      socket.emit('makeConditionsAndStart', gameArray);\n      setStarted(true);\n      alert('Game started');\n    });\n  }, [started]);\n  useEffect(() => {\n    socket.on('ball', ball => {\n      setCount(count + 1);\n      setGameBoard(ball);\n      console.log(ball);\n    });\n  }, [gameBoard]);\n\n  const sendStartGame = () => {\n    if (!started) {\n      socket.emit('start');\n    }\n  };\n\n  const callBingo = () => {\n    socket.emit('bingo', count);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, gameBoard), /*#__PURE__*/React.createElement(Ticket, {\n    ticket: ticket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => sendStartGame(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Start!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => callBingo(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"BINGO!\"));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/mudit/Desktop/React/tambola/tambolaClient/src/components/Home/Home.js"],"names":["React","useState","useEffect","io","queryString","Ticket","socket","Home","location","name","setName","room","setRoom","ticket","setTicket","started","setStarted","gameBoard","setGameBoard","count","setCount","ENDPOINT","parse","search","substring","console","log","emit","off","on","gameArray","alert","ball","sendStartGame","callBingo","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport queryString from 'querystring';\nimport Ticket from '../Ticket/Ticket'\nlet socket;\nconst Home = ({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [ticket, setTicket] = useState([]);\n    const [started, setStarted] = useState(false);\n    const [gameBoard, setGameBoard] = useState([]);\n    const [count,setCount]=useState(0);\n    const ENDPOINT = 'localhost:5000';\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search.substring(1));\n        //console.log(queryString.parse(location.search.substring(1)));\n        console.log(name, room);\n\n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room }, () => {\n            console.log('Emitted join signal')\n        });\n\n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n\n    }, [ENDPOINT, location.search]);\n    useEffect(() => {\n        socket.on('ticket', (ticket) => {\n            setTicket(ticket);\n            //alert(ticket.toString());\n        })\n    }, [ticket]);\n    useEffect(() => {\n        socket.on('startedGame', (gameArray) => {\n            socket.emit('makeConditionsAndStart', gameArray);\n            setStarted(true);\n            alert('Game started');\n        })\n    }, [started]);\n    useEffect(() => {\n        socket.on('ball', (ball) => {\n            setCount(count+1);\n            setGameBoard(ball);\n            console.log(ball);\n        });\n    }, [gameBoard])\n    const sendStartGame = () => {\n        if (!started) {\n            socket.emit('start');\n        }\n    }\n    const callBingo=()=>{\n        socket.emit('bingo',count);\n    }\n    return (\n        <div>\n            <div>\n                {gameBoard}\n            </div>\n\n            <Ticket ticket={ticket} />\n            <button onClick={(event) => sendStartGame(event)}>Start!</button>\n            <button onClick={(event)=> callBingo(event)}>BINGO!</button>\n        </div>\n    )\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}