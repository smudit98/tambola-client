{"ast":null,"code":"var _jsxFileName = \"/home/mudit/Desktop/React/tambola/tambolaClient/src/components/GameBoard/GameBoard.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './GameBoard.css'; // function RenderGrid(array, gameBoard) {\n//     return (\n//         <Grid container justify=\"center\" className='rowOfTicket' spacing={2}>\n//             {array.map((item) => {\n//                 return (\n//                     <Grid item xs={1.2}>\n//                         <Paper className={gameBoard.includes(item)?\"done\":\"todo\"}>{item}</Paper>\n//                     </Grid>\n//                 )\n//             })}\n//         </Grid>\n//     )\n// }\n\nconst useStyles = makeStyles({\n  gridroot: {\n    padding: '10px',\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n  },\n  numbers: {\n    margin: '10px',\n    padding: '10px',\n    textAlign: \"center\"\n  }\n});\n\nconst GameBoard = ({\n  gameBoard\n}) => {\n  var array = new Array(90);\n\n  for (var i = 1; i <= 90; i++) {\n    array[i - 1] = i;\n  }\n\n  const classes = useStyles();\n  return (\n    /*#__PURE__*/\n    // <RenderGrid array={array} gameBoard={gameBoard} />\n    React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      classes: {\n        root: classes.gridroot\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, array.map(item => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        classes: {\n          root: classes.numbers\n        },\n        className: gameBoard.includes(item) ? \"done\" : \"todo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, item));\n    }))\n  );\n};\n\nexport default GameBoard;","map":{"version":3,"sources":["/home/mudit/Desktop/React/tambola/tambolaClient/src/components/GameBoard/GameBoard.js"],"names":["React","Grid","Paper","makeStyles","useStyles","gridroot","padding","background","numbers","margin","textAlign","GameBoard","gameBoard","array","Array","i","classes","root","map","item","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,iBAAP,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAACD,UAAU,CAAC;AACvBE,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,UAAU,EAAE;AAFP,GADc;AAKvBC,EAAAA,OAAO,EAAC;AACLC,IAAAA,MAAM,EAAE,MADH;AAELH,IAAAA,OAAO,EAAE,MAFJ;AAGLI,IAAAA,SAAS,EAAC;AAHL;AALe,CAAD,CAA1B;;AAYA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACjC,MAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAU,EAAV,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BF,IAAAA,KAAK,CAACE,CAAC,GAAG,CAAL,CAAL,GAAeA,CAAf;AACH;;AACD,QAAMC,OAAO,GAACZ,SAAS,EAAvB;AAEA;AAAA;AACI;AACA,wBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAiC,MAAA,OAAO,EAAE;AAACa,QAAAA,IAAI,EAACD,OAAO,CAACX;AAAd,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCQ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AACjB,0BACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE;AAACF,UAAAA,IAAI,EAACD,OAAO,CAACR;AAAd,SAAhB;AAAwC,QAAA,SAAS,EAAEI,SAAS,CAACQ,QAAV,CAAmBD,IAAnB,IAAyB,MAAzB,GAAgC,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4FA,IAA5F,CADJ,CADJ;AAKH,KANA,CADD;AAFJ;AAYH,CAnBD;;AAoBA,eAAeR,SAAf","sourcesContent":["import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles';\nimport './GameBoard.css'\n// function RenderGrid(array, gameBoard) {\n//     return (\n//         <Grid container justify=\"center\" className='rowOfTicket' spacing={2}>\n//             {array.map((item) => {\n//                 return (\n//                     <Grid item xs={1.2}>\n//                         <Paper className={gameBoard.includes(item)?\"done\":\"todo\"}>{item}</Paper>\n//                     </Grid>\n//                 )\n//             })}\n//         </Grid>\n//     )\n// }\nconst useStyles=makeStyles({\n    gridroot:{\n        padding: '10px',\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n    },\n    numbers:{\n       margin: '10px',\n       padding: '10px',\n       textAlign:\"center\" \n    }\n\n});\nconst GameBoard = ({ gameBoard }) => {\n    var array = new Array(90);\n    for (var i = 1; i <= 90; i++) {\n        array[i - 1] = i;\n    }\n    const classes=useStyles();\n\n    return (\n        // <RenderGrid array={array} gameBoard={gameBoard} />\n        <Grid container justify=\"center\" classes={{root:classes.gridroot}}>\n        {array.map((item) => {\n            return (\n                <Grid item xs={3}>\n                    <Paper classes={{root:classes.numbers}} className={gameBoard.includes(item)?\"done\":\"todo\"}>{item}</Paper>\n                </Grid>\n            )\n        })}\n    </Grid>\n    )\n}\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}