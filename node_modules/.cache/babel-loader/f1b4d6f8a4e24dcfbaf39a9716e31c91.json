{"ast":null,"code":"var _jsxFileName = \"/home/mudit/Desktop/React/tambola/tambolaClient/src/components/Ticket/Ticket.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nfunction RenderRow({\n  row\n}) {\n  //var rowvals={row}.toString().split(\"\").map((x)=>+x);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, row.map(item => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }\n    }, \"Item=\", item, \" \");\n  }));\n}\n\nconst Ticket = ({\n  ticket\n}) => {\n  //console.log({row1}.toString());\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, ticket.map(row => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      className: \"rowOfTicket\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, row.map(item => {\n      if (item != 0) {\n        return /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 37\n          }\n        }, item));\n      } else {\n        return /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 37\n          }\n        }, \"   \"));\n      }\n    }));\n  }));\n};\n\nexport default Ticket;","map":{"version":3,"sources":["/home/mudit/Desktop/React/tambola/tambolaClient/src/components/Ticket/Ticket.js"],"names":["React","Grid","Paper","RenderRow","row","map","item","Ticket","ticket"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AACA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA4B;AACxB;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,GAAG,CAACC,GAAJ,CAASC,IAAD,IAAU;AACf,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYA,IAAZ,MADJ;AAGH,GAJA,CADL,CADJ;AASH;;AACD,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC3B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,MAAM,CAACH,GAAP,CAAYD,GAAD,IAAS;AACjB,wBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,GAAG,CAACC,GAAJ,CAASC,IAAD,IAAU;AACf,UAAIA,IAAI,IAAI,CAAZ,EAAe;AACX,4BACI,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQA,IAAR,CADA,CADJ;AAKH,OAND,MAOK;AACD,4BACI,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,CADJ;AAKH;AACJ,KAfA,CADL,CADJ;AAoBH,GArBA,CADL,CADJ;AA0BH,CA5BD;;AA6BA,eAAeC,MAAf","sourcesContent":["import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nfunction RenderRow({ row }) {\n    //var rowvals={row}.toString().split(\"\").map((x)=>+x);\n    return (\n        <div>\n            {row.map((item) => {\n                return (\n                    <span>Item={item} </span>\n                )\n            })}\n        </div>\n    )\n}\nconst Ticket = ({ ticket }) => {\n    //console.log({row1}.toString());\n    return (\n        <div>\n            {ticket.map((row) => {\n                return (\n                    <Grid className='rowOfTicket'>\n                        {row.map((item) => {\n                            if (item != 0) {\n                                return (\n                                    <Grid item xs={2}>\n                                    <Paper>{item}</Paper>\n                                    </Grid>\n                                )\n                            }\n                            else {\n                                return (\n                                    <Grid item xs={2}>\n                                    <Paper>   </Paper>\n                                    </Grid>\n                                )\n                            }\n                        })}\n                    </Grid>\n                )\n            })}\n        </div>\n    )\n}\nexport default Ticket;"]},"metadata":{},"sourceType":"module"}